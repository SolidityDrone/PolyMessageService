{
	"id": "0b24ad2daee7306d1825086fb01b4bbb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"tests/MyToken_test.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(0, 0x09, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"tests/MyToken_test.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"tests/MyToken_test.sol\":56:1036  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"tests/MyToken_test.sol\":56:1036  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5b7d2d8106cac83cf6636c4950c515af2ff3192b798db37db7a389ba228144a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5b7d2d8106cac83cf6636c4950c515af2ff3192b798db37db7a389ba228144a64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB7 0xD2 0xD8 LT PUSH13 0xAC83CF6636C4950C515AF2FF31 SWAP3 0xB7 SWAP9 0xDB CALLDATACOPY 0xDB PUSH27 0x389BA228144A64736F6C6343000807003300000000000000000000 ",
							"sourceMap": "56:980:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d5b7d2d8106cac83cf6636c4950c515af2ff3192b798db37db7a389ba228144a64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB7 0xD2 0xD8 LT PUSH13 0xAC83CF6636C4950C515AF2FF31 SWAP3 0xB7 SWAP9 0xDB CALLDATACOPY 0xDB PUSH27 0x389BA228144A64736F6C6343000807003300000000000000000000 ",
							"sourceMap": "56:980:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"clone(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 56,
									"end": 1036,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5b7d2d8106cac83cf6636c4950c515af2ff3192b798db37db7a389ba228144a64736f6c63430008070033",
									".code": [
										{
											"begin": 56,
											"end": 1036,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56,
											"end": 1036,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"tests/MyToken_test.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"tests/MyToken_test.sol\":{\"keccak256\":\"0xa9b38bdb3d14e82244d91b8e7c48e9c771c630a33742b8be5f3e6209ae4e0ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d1275a79250e28fbb27de0d97cd5813e234e73838491084a6eb49f98edcad\",\"dweb:/ipfs/QmXG2sRx93qqdRhT6yaedUTih9TP1YWWHjUFXPEN3Bm4Kc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"tests/MyToken_test.sol": {
				"ast": {
					"absolutePath": "tests/MyToken_test.sol",
					"exportedSymbols": {
						"Clones": [
							22
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Clones",
							"nameLocation": "64:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "349:684:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "411:549:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "616:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "629:4:0",
																						"type": "",
																						"value": "0xe8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "639:4:0",
																								"type": "",
																								"value": "0x60"
																							},
																							{
																								"name": "implementation",
																								"nodeType": "YulIdentifier",
																								"src": "645:14:0"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "635:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "635:25:0"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nodeType": "YulIdentifier",
																					"src": "625:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "625:36:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:48:0",
																				"type": "",
																				"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "622:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "622:90:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "609:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:104:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "609:104:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "834:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "847:4:0",
																						"type": "",
																						"value": "0x78"
																					},
																					{
																						"name": "implementation",
																						"nodeType": "YulIdentifier",
																						"src": "853:14:0"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "843:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "843:25:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "870:32:0",
																				"type": "",
																				"value": "0x5af43d82803e903d91602b57fd5bf3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "840:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:63:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:77:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "827:77:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "917:33:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "936:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:0",
																		"type": "",
																		"value": "0x09"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "945:4:0",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "929:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:21:0"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "917:8:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "645:14:0",
														"valueSize": 1
													},
													{
														"declaration": 4,
														"isOffset": false,
														"isSlot": false,
														"src": "853:14:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "917:8:0",
														"valueSize": 1
													}
												],
												"id": 9,
												"nodeType": "InlineAssembly",
												"src": "402:558:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 11,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "977:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 14,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "997:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 13,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "989:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 12,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "989:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "989:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "977:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1001:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "969:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "969:57:0"
											}
										]
									},
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "77:192:0",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nameLocation": "283:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "297:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "289:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:24:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "instance",
												"nameLocation": "339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:18:0"
									},
									"scope": 22,
									"src": "274:759:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 23,
							"src": "56:980:0",
							"usedErrors": []
						}
					],
					"src": "32:1005:0"
				},
				"id": 0
			}
		}
	}
}